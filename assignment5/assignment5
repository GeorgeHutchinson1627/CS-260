#include <iostream>

using namespace std;


struct node{
    int data;
    node *next_node;
};

node *beginning=nullptr;
void add_value(node* header,int value)
{
  node *pointer=beginning;
  node *new_node= new node();
  new_node->data=value;
  new_node->next_node=nullptr;
  bool placed=false;

  if (beginning==nullptr){
      beginning=header;
  }
  if (new_node->data<beginning->data){
    new_node->next_node=beginning;
    beginning=new_node;
  }
  else if (new_node->data>=beginning->data){
          while (placed==false){
              if (new_node->data<=pointer->data){
                  new_node->next_node=pointer->next_node;
                  pointer->next_node=new_node;
                  placed=true;
              }
              else if (pointer->next_node==nullptr){
                  new_node->next_node=nullptr;
                  pointer->next_node=new_node;
                  placed=true;
              }
              else{
                 pointer=pointer->next_node;
                } 
          
          }
      }   
  }



node *middle;
node*node_end;
void find(node* beginning,int number){
    node* node_pointer=beginning;
while(node_pointer!=nullptr && node_pointer->data<number){
    node_pointer=node_pointer->next_node;
}

if (node_pointer->data==number){
    cout<<"Found Number: "<<number<<"\n";
}
else{
    cout<<"Number not in linked-list"<<"\n";
}
}

void show(){
    node *pointer=beginning;
    while (pointer!=nullptr){
        cout<<pointer->data<<"\n";
        pointer=pointer->next_node;
    }
     

}


int main(){
    node *header=new node();
    header->data=10;
    header->next_node=NULL;
    add_value(header,9);
    add_value(header,8);
    add_value(header,12);
    add_value(header,4);
    show();
    find(beginning,8);
    find(beginning,11);   
}
